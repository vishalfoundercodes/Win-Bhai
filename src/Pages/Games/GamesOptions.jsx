import { useState,useEffect } from "react";
import { FaDice, FaRocket } from "react-icons/fa";
import { useNavigate, useParams, useLocation } from "react-router-dom";
// Custom SVG component so we can control its color with props
const Cassino = ({ active }) => (
  <svg
    width="24"
    height="24"
    viewBox="0 0 24 24"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clipPath="url(#clip0_367_521)">
      <path
        d="M16.3333 0H8C7.08333 0 6.33333 0.75 6.33333 1.66667V15C6.33333 15.9167 7.08333 16.6667 8 16.6667H16.3333C17.25 16.6667 18 15.9167 18 15V1.66667C18 0.75 17.25 0 16.3333 0ZM16.3333 15H8V1.66667H16.3333V15ZM3 3.33333V18.3333C3 19.25 3.75 20 4.66667 20H14.6667V18.3333H4.66667V3.33333H3ZM12.1667 5C11.25 5 10.5 5.75 10.5 6.66667C10.5 7 10.5833 7.25 10.75 7.5H10.5C9.58333 7.5 8.83333 8.25 8.83333 9.16667C8.83333 10.0833 9.58333 10.8333 10.5 10.8333C11 10.8333 11.4167 10.5833 11.75 10.25L10.9167 12.5H13.4167L12.5833 10.25C12.9167 10.5833 13.3333 10.8333 13.8333 10.8333C14.75 10.8333 15.5 10.0833 15.5 9.16667C15.5 8.25 14.75 7.5 13.8333 7.5H13.5833C13.75 7.25 13.8333 7 13.8333 6.66667C13.8333 5.75 13.0833 5 12.1667 5Z"
        fill={active ? "white" : "white"}
      />
    </g>
    <defs>
      <clipPath id="clip0_367_521">
        <rect
          width="23"
          height="23"
          fill="white"
          transform="translate(0.5 0.5)"
        />
      </clipPath>
    </defs>
  </svg>
);

// ✅ Slot SVG
const SlotIcon = ({ active }) => (
  <svg width="20" height="20" viewBox="0 0 20 20">
    <path
      d="M2 6.443V14.25C2 14.523 2.148 14.774 2.387 14.906L9.25 18.693V10.443L2 6.443ZM3.799 8.9C4.177 8.885 4.613 9.164 4.883 9.63C5.228 10.229 5.169 10.909 4.75 11.15C4.331 11.391 3.712 11.104 3.367 10.506C3.022 9.908 3.081 9.226 3.5 8.984C3.59141 8.93225 3.69401 8.90343 3.799 8.9ZM6.799 10.65C7.177 10.635 7.613 10.914 7.883 11.38C8.228 11.979 8.169 12.659 7.75 12.9C7.331 13.141 6.712 12.854 6.367 12.256C6.022 11.658 6.081 10.976 6.5 10.734C6.59141 10.6823 6.69401 10.6534 6.799 10.65ZM3.799 12.15C4.177 12.135 4.613 12.414 4.883 12.88C5.228 13.479 5.169 14.159 4.75 14.4C4.331 14.641 3.712 14.354 3.367 13.756C3.022 13.158 3.081 12.476 3.5 12.234C3.59141 12.1823 3.69401 12.1534 3.799 12.15ZM6.799 13.9C7.177 13.885 7.613 14.164 7.883 14.63C8.228 15.229 8.169 15.909 7.75 16.15C7.331 16.391 6.712 16.104 6.367 15.506C6.022 14.908 6.081 14.226 6.5 13.984C6.59141 13.9323 6.69401 13.9034 6.799 13.9ZM18 6.443L10.75 10.443V18.693L17.611 14.906C17.7286 14.8414 17.8267 14.7465 17.8951 14.6311C17.9635 14.5158 17.9997 14.3841 18 14.25V6.443ZM13.156 10.65C13.2762 10.6456 13.3953 10.6747 13.5 10.734C13.919 10.976 13.978 11.658 13.633 12.256C13.288 12.854 12.669 13.142 12.25 12.9C11.831 12.659 11.772 11.979 12.117 11.38C12.377 10.932 12.788 10.658 13.156 10.65ZM16.157 12.15C16.2772 12.1456 16.3963 12.1747 16.501 12.234C16.92 12.476 16.979 13.158 16.634 13.756C16.289 14.354 15.67 14.642 15.251 14.4C14.832 14.159 14.773 13.479 15.118 12.88C15.378 12.432 15.79 12.158 16.158 12.15M10 1C9.87299 1.00009 9.74809 1.03244 9.637 1.094L2.523 5.018L10 9.143L17.477 5.018L10.361 1.094C10.2505 1.03276 10.1263 1.00043 10 1ZM10 4.197C10.3315 4.197 10.6495 4.28919 10.8839 4.45328C11.1183 4.61738 11.25 4.83994 11.25 5.072C11.25 5.30406 11.1183 5.52662 10.8839 5.69072C10.6495 5.85481 10.3315 5.947 10 5.947C9.66848 5.947 9.35054 5.85481 9.11612 5.69072C8.8817 5.52662 8.75 5.30406 8.75 5.072C8.75 4.83994 8.8817 4.61738 9.11612 4.45328C9.35054 4.28919 9.66848 4.197 10 4.197Z"
      fill={active ? "white" : "white"}
    />
  </svg>
);

// ✅ Aviator SVG
const AviatorIcon = ({ active }) => (
  <svg width="20" height="20" viewBox="0 0 20 20">
    <path
      d="M7.52824 4.96923L5.40907 7.0834C5.0199 7.47173 4.6624 7.82756 4.3799 8.15006C4.18874 8.36267 4.01616 8.59129 3.86407 8.8334L3.84407 8.81256L3.7649 8.73423C3.39572 8.37757 2.9626 8.09373 2.48824 7.89756L2.38574 7.8559L2.0699 7.7309C1.97154 7.69212 1.88439 7.62946 1.81631 7.54857C1.74823 7.46768 1.70137 7.37111 1.67995 7.26758C1.65853 7.16404 1.66323 7.0568 1.69363 6.95554C1.72403 6.85428 1.77917 6.76218 1.85407 6.68756C2.7874 5.7559 3.90824 4.6384 4.4499 4.41423C4.92035 4.21772 5.43511 4.15179 5.9399 4.2234C6.3949 4.2909 6.8249 4.52506 7.52824 4.96923ZM11.1474 16.0942C11.3182 16.2676 11.4307 16.3901 11.5341 16.5209C11.6691 16.6937 11.7896 16.8765 11.8957 17.0692C12.0141 17.2859 12.1066 17.5167 12.2907 17.9792C12.3269 18.0667 12.3841 18.1439 12.4572 18.204C12.5303 18.264 12.6171 18.3051 12.71 18.3236C12.8028 18.3421 12.8987 18.3373 12.9893 18.3098C13.0798 18.2823 13.1622 18.2329 13.2291 18.1659L13.2991 18.0967C14.2324 17.1659 15.3532 16.0484 15.5782 15.5092C15.7759 15.0408 15.8419 14.5274 15.7691 14.0242C15.7016 13.5701 15.4674 13.1409 15.0216 12.4392L12.8949 14.5592C12.4966 14.9567 12.1316 15.3209 11.8007 15.6059C11.6032 15.7776 11.3866 15.9476 11.1474 16.0942Z"
      fill={active ? "white" : "#white"}
    />
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M12.0391 13.6469L16.9116 8.78852C17.6132 8.08935 17.9641 7.73935 18.1482 7.29518C18.3324 6.85102 18.3332 6.35518 18.3332 5.36602V4.89352C18.3332 3.37185 18.3332 2.61102 17.8591 2.13852C17.3849 1.66602 16.6224 1.66602 15.0966 1.66602H14.6216C13.6299 1.66602 13.1341 1.66602 12.6882 1.85018C12.2416 2.03435 11.8907 2.38435 11.1882 3.08352L6.31658 7.94185C5.49658 8.75852 4.98824 9.26602 4.79158 9.75518C4.73066 9.90384 4.69897 10.0629 4.69824 10.2235C4.69824 10.8918 5.23741 11.4302 6.31658 12.506L6.46158 12.6502L8.15991 10.926C8.21753 10.8675 8.2861 10.821 8.36172 10.789C8.43733 10.757 8.51851 10.7402 8.60061 10.7396C8.68271 10.7389 8.76413 10.7545 8.84022 10.7854C8.91631 10.8162 8.98558 10.8617 9.04408 10.9193C9.10257 10.977 9.14914 11.0455 9.18113 11.1212C9.21312 11.1968 9.22991 11.2779 9.23053 11.3601C9.23114 11.4422 9.21559 11.5236 9.18474 11.5997C9.15389 11.6758 9.10836 11.745 9.05074 11.8035L7.34658 13.5327L7.46074 13.6469C8.53991 14.7219 9.07991 15.2602 9.74991 15.2602C9.89824 15.2602 10.0399 15.2343 10.1824 15.1818C10.6849 14.9968 11.1982 14.4852 12.0391 13.6469ZM14.3282 7.94185C14.0243 8.24468 13.6127 8.41472 13.1837 8.41472C12.7546 8.41472 12.343 8.24468 12.0391 7.94185C11.8887 7.79237 11.7693 7.61462 11.6878 7.41883C11.6064 7.22304 11.5644 7.01308 11.5644 6.80102C11.5644 6.58896 11.6064 6.37899 11.6878 6.1832C11.7693 5.98741 11.8887 5.80966 12.0391 5.66018C12.343 5.35735 12.7546 5.18731 13.1837 5.18731C13.6127 5.18731 14.0243 5.35735 14.3282 5.66018C14.4787 5.80966 14.598 5.98741 14.6795 6.1832C14.761 6.37899 14.8029 6.58896 14.8029 6.80102C14.8029 7.01308 14.761 7.22304 14.6795 7.41883C14.598 7.61462 14.4787 7.79237 14.3282 7.94185Z"
      fill={active ? "white" : "#white"}
    />
  </svg>
);
const VirtualCassino = ({ active }) => (
  <svg
    width="23"
    height="24"
    viewBox="0 0 23 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M4.79232 12.0001L6.70898 8.16675V7.20841H3.83398V8.16675H5.75065L3.83398 12.0001M8.62565 12.0001L10.5423 8.16675V7.20841H7.66732V8.16675H9.58398L7.66732 12.0001M12.459 12.0001L14.3757 8.16675V7.20841H11.5007V8.16675H13.4173L11.5007 12.0001M20.1256 2.41675C19.0715 2.41675 18.209 3.27925 18.209 4.33341C18.209 5.00425 18.5923 5.67508 19.1673 5.96258V16.7917H16.2923V14.8751C16.8673 14.8751 17.2507 14.4917 17.2507 13.9167V5.29175C17.2507 4.71675 16.8673 4.33341 16.2923 4.33341H12.6507C11.884 3.18341 10.5423 2.41675 9.10482 2.41675C7.66732 2.41675 6.32565 3.18341 5.55898 4.33341H1.91732C1.34232 4.33341 0.958984 4.71675 0.958984 5.29175V13.9167C0.958984 14.4917 1.34232 14.8751 1.91732 14.8751V21.5834H16.2923V18.7084H19.1673C20.2215 18.7084 21.084 17.8459 21.084 16.7917V5.96258C21.659 5.67508 22.0423 5.00425 22.0423 4.33341C22.0423 3.27925 21.1798 2.41675 20.1256 2.41675ZM2.87565 6.25008H15.334V12.9584H2.87565V6.25008ZM14.3757 19.6667H3.83398V14.8751H14.3757V19.6667ZM12.459 18.7084H5.75065V16.7917H12.459V18.7084Z"
      fill="white"
    />
  </svg>
);
const DragonTiger = ({ active }) => (
  <svg
    width="23"
    height="24"
    viewBox="0 0 23 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M19.1125 1.65301C19.1437 1.65436 19.1679 1.66357 19.1844 1.68162C20.4492 3.06773 20.2513 4.31122 20.0092 5.60946C19.9027 5.8267 19.8078 6.00482 19.7041 6.15166C19.4762 6.47456 19.1945 6.71216 18.5059 7.05644L18.8675 7.77959C19.6164 7.40512 20.0535 7.05873 20.3646 6.61791C20.3955 6.574 20.4253 6.52936 20.454 6.48404C21.5088 7.81544 22.1448 9.43159 22.2582 11.2318C21.7877 10.7343 21.3453 10.5857 20.7818 10.4743C20.6176 9.69384 20.2845 8.90461 19.7288 8.16381L19.0821 8.64878C20.0858 9.98714 20.2479 11.4765 19.9973 12.7293C19.7468 13.9821 19.0318 14.9693 18.5059 15.2322C17.7148 15.6278 17.1431 16.2064 16.6938 16.6556C16.4692 16.8802 16.2737 17.0728 16.1164 17.1931C16.1085 17.1991 16.1014 17.2039 16.0939 17.2095C16.0556 16.9913 15.9997 16.7654 15.929 16.5323C15.6903 15.7446 15.2721 14.8671 14.7209 13.9483L14.0275 14.3643C14.5544 15.2424 14.9448 16.0719 15.1553 16.7667C15.3659 17.4614 15.3794 18.0118 15.2567 18.3187C15.1339 18.6255 14.9324 18.7869 14.3608 18.806C13.8629 18.8226 13.1136 18.6716 12.1173 18.2847C14.2783 17.5191 13.7404 16.1761 13.6555 14.875C12.9367 16.3125 12.218 16.3125 11.4992 16.3125C10.7805 16.3125 10.0617 16.3125 9.34295 14.875C9.25805 16.1761 8.72007 17.5191 10.8811 18.2847C9.8848 18.6716 9.13541 18.8226 8.63763 18.806C8.06605 18.7869 7.86448 18.6255 7.74171 18.3187C7.61899 18.0118 7.63255 17.4615 7.84306 16.7667C8.05361 16.0719 8.44402 15.2424 8.97087 14.3643L8.27754 13.9483C7.72626 14.8671 7.30808 15.7446 7.06941 16.5323C6.99875 16.7654 6.94282 16.9914 6.90455 17.2095C6.89696 17.2039 6.88986 17.1991 6.882 17.1931C6.72473 17.0728 6.52918 16.8802 6.30457 16.6556C5.85535 16.2064 5.28359 15.6278 4.49251 15.2322C3.96661 14.9693 3.25164 13.9821 3.00111 12.7293C2.75058 11.4765 2.91261 9.98714 3.91635 8.64878L3.26956 8.16381C2.71388 8.90461 2.38078 9.69384 2.21659 10.4743C1.65314 10.5857 1.2107 10.7343 0.740234 11.2318C0.853572 9.43159 1.48953 7.81548 2.54439 6.48404C2.57313 6.52936 2.60294 6.574 2.63378 6.61791C2.94496 7.05873 3.382 7.40512 4.13089 7.77959L4.49251 7.05644C3.80391 6.71216 3.5222 6.47456 3.29431 6.15171C3.19063 6.00482 3.09576 5.8267 2.98925 5.6095C2.74712 4.31126 2.54919 3.06773 3.81401 1.68162C3.8305 1.66357 3.85467 1.65436 3.88589 1.65301C4.29454 1.63531 5.91712 2.9535 7.43701 3.25196C8.31977 2.97726 9.27193 2.79286 10.282 2.70867L10.4818 3.40802C9.8565 3.49224 9.20859 3.65257 8.49636 3.88998L8.75205 4.65698C9.4774 4.41521 10.1052 4.25673 10.7028 4.18153L10.9033 4.88321C10.6332 4.90643 10.3706 4.94556 10.1263 5.00301C9.70498 5.10215 9.33208 5.24002 9.05711 5.51499L9.62879 6.08666C9.71324 6.00225 9.96921 5.87059 10.3115 5.79004C10.5535 5.73308 10.8362 5.69508 11.1303 5.67747L11.4992 6.96879L11.8681 5.67747C12.1622 5.69508 12.4449 5.73308 12.6869 5.79004C13.0292 5.87059 13.2852 6.00225 13.3696 6.08666L13.9413 5.51499C13.6664 5.24002 13.2934 5.10215 12.8721 5.00301C12.6278 4.94556 12.3652 4.90643 12.0951 4.88316L12.2956 4.18153C12.8932 4.25668 13.521 4.41521 14.2464 4.65698L14.5021 3.88998C13.7898 3.65257 13.1419 3.49224 12.5166 3.40802L12.7164 2.70867C13.7265 2.79281 14.6786 2.97731 15.5614 3.25196C17.0813 2.95354 18.7039 1.63531 19.1125 1.65301H19.1125ZM14.9429 6.59347C13.146 7.31222 12.2898 7.64271 11.4992 7.64271C10.7086 7.64271 9.85246 7.31222 8.05558 6.59347L7.75532 7.34412C9.5522 8.06287 10.493 8.45113 11.4992 8.45113C12.5055 8.45113 13.4462 8.06287 15.2431 7.34412L14.9429 6.59347ZM16.8876 6.78798C16.2412 8.08083 14.9121 8.76347 13.4746 9.48222L13.8155 10.1638C13.5991 10.4567 13.4146 10.806 13.2794 11.2186C13.2794 11.2186 12.9367 12.7188 12.8973 13.3711L13.6948 13.504C13.6555 12.7188 13.6555 12 14.0385 11.4908C14.2709 11.8063 14.6407 12.0135 15.058 12.0135C15.7626 12.0135 16.3323 11.4228 16.3323 10.7169C16.3323 10.3079 16.1407 9.93786 15.8427 9.6987C16.396 9.53361 16.9358 9.52925 17.2492 9.52925V8.72084C17.0373 8.72084 16.6783 8.7194 16.2551 8.78207C16.7994 8.34718 17.2737 7.82366 17.6108 7.1496L16.8876 6.78798ZM6.11078 6.78798L5.38763 7.1496C5.72468 7.82366 6.19901 8.34718 6.74328 8.78207C6.32007 8.7194 5.9611 8.72084 5.7492 8.72084V9.52925C6.06262 9.52925 6.60236 9.53361 7.15566 9.6987C6.8577 9.93786 6.66615 10.3079 6.66615 10.7169C6.66615 11.4227 7.23585 12.0135 7.94045 12.0135C8.35768 12.0135 8.72752 11.8063 8.9599 11.4908C9.34295 12 9.34295 12.7188 9.30356 13.504L10.1011 13.3711C10.0617 12.7188 9.71899 11.2187 9.71899 11.2187C9.58378 10.806 9.39933 10.4568 9.1829 10.1638L9.52376 9.48226C8.08626 8.76351 6.75721 8.08083 6.11078 6.78798ZM18.3514 8.99724L17.5845 9.25285C17.7343 9.70247 17.699 10.0852 17.5546 10.4798C17.4102 10.8744 17.1445 11.2708 16.8402 11.662C16.536 12.0532 16.1961 12.4367 15.918 12.8358C15.64 13.2348 15.4075 13.6622 15.4075 14.1563H16.2159C16.2159 13.9317 16.3429 13.6403 16.5813 13.2981C16.8198 12.9559 17.1538 12.5758 17.4784 12.1584C17.8031 11.741 18.1214 11.2839 18.3139 10.7576C18.5065 10.2313 18.561 9.62579 18.3514 8.99724ZM4.64695 8.99724C4.43744 9.62574 4.49197 10.2312 4.68451 10.7576C4.87705 11.2839 5.19527 11.741 5.51992 12.1584C5.84457 12.5758 6.17857 12.9559 6.41706 13.2981C6.65559 13.6403 6.7825 13.9317 6.7825 14.1563H7.59091C7.59091 13.6622 7.35848 13.2348 7.08037 12.8358C6.80226 12.4368 6.46243 12.0532 6.15813 11.662C5.85387 11.2708 5.58816 10.8744 5.44378 10.4798C5.2994 10.0852 5.26409 9.70247 5.41395 9.25289L4.64695 8.99724ZM15.058 10.2287C15.3144 10.2287 15.5238 10.437 15.5238 10.7169C15.5238 10.9967 15.3144 11.205 15.0579 11.205C14.8015 11.205 14.5922 10.9967 14.5922 10.7169C14.5922 10.437 14.8015 10.2287 15.058 10.2287ZM7.94045 10.2287C8.19691 10.2287 8.40629 10.437 8.40629 10.7169C8.40629 10.9967 8.19691 11.205 7.94045 11.205C7.68399 11.205 7.47465 10.9967 7.47465 10.7169C7.47465 10.437 7.68394 10.2287 7.94045 10.2287ZM20.8359 10.7693C22.438 13.4924 22.253 16.3399 21.5617 17.0313C21.1221 16.3404 20.6577 15.7817 20.1242 15.5938C20.5476 17.2136 20.1242 18.4688 19.4055 19.1875C19.4055 18.4688 19.2513 18.1235 18.6867 17.75C18.8346 19.5438 17.8677 20.3013 17.2492 20.625C16.9784 20.1017 16.464 19.5275 15.7544 19.0306C15.8615 18.9087 15.947 18.7695 16.0073 18.6189C16.0729 18.455 16.1137 18.282 16.1344 18.1012C16.3094 18.0433 16.465 17.9443 16.6076 17.8353C16.8321 17.6636 17.0409 17.4519 17.2655 17.2273C17.7147 16.7781 18.2211 16.2785 18.8675 15.9554C19.7791 15.4995 20.5016 14.3305 20.7902 12.888C20.922 12.2287 20.9518 11.5062 20.8359 10.7693ZM2.16246 10.7693C2.04656 11.5061 2.07639 12.2287 2.20828 12.888C2.49677 14.3305 3.21929 15.4995 4.13089 15.9554C4.77732 16.2786 5.28368 16.7781 5.7329 17.2273C5.95751 17.4519 6.16626 17.6636 6.39082 17.8353C6.53336 17.9443 6.68897 18.0433 6.86398 18.1012C6.88474 18.2821 6.92553 18.455 6.99107 18.6189C7.05139 18.7695 7.13691 18.9087 7.24398 19.0306C6.53444 19.5274 6.01999 20.1017 5.7492 20.625C5.13072 20.3013 4.16378 19.5438 4.3117 17.75C3.74712 18.1235 3.59295 18.4688 3.59295 19.1875C2.8742 18.4688 2.45077 17.2136 2.8742 15.5938C2.34071 15.7817 1.87635 16.3404 1.4367 17.0313C0.745355 16.3399 0.560367 13.4924 2.16246 10.7693ZM19.0909 12H18.2825C18.2825 12.5166 17.8283 13.1889 17.3017 13.8033C17.0383 14.1106 16.7676 14.4028 16.5491 14.682C16.3306 14.9612 16.1262 15.212 16.1262 15.5938H16.9347C16.9347 15.6163 16.9999 15.4178 17.1857 15.1804C17.3715 14.943 17.6398 14.6512 17.9155 14.3296C18.4669 13.6862 19.0909 12.9209 19.0909 12ZM4.71591 12H3.9075C3.9075 12.9209 4.53146 13.6862 5.08292 14.3296C5.35865 14.6512 5.62693 14.943 5.81272 15.1804C5.99852 15.4178 6.06375 15.6162 6.06375 15.5938H6.87216C6.87216 15.212 6.66786 14.9612 6.44936 14.682C6.23086 14.4028 5.96007 14.1106 5.69673 13.8033C5.17007 13.1889 4.71591 12.5167 4.71591 12ZM13.7778 19.5831C13.9944 19.61 14.1973 19.6204 14.3876 19.6141C14.4685 19.6111 14.5492 19.6042 14.6294 19.5931C14.516 19.9929 14.3317 20.3733 14.0559 20.7042C13.5275 21.3383 12.6672 21.748 11.4992 21.748C10.3312 21.748 9.47094 21.3383 8.94252 20.7042C8.6667 20.3733 8.48243 19.9929 8.36896 19.5931C8.44766 19.6037 8.52798 19.6113 8.61077 19.614C8.80106 19.6204 9.00397 19.6101 9.22063 19.583C9.30418 19.8061 9.41707 20.0106 9.5637 20.1865C9.93372 20.6306 10.5109 20.9396 11.4992 20.9396C12.4875 20.9396 13.0647 20.6305 13.4347 20.1865C13.5813 20.0106 13.6942 19.806 13.7778 19.5831Z"
      fill="white"
    />
  </svg>
);

// ✅ Categories
const categories = [
  { id: "see all", label: "see all", type: "text" }, // no icon
  { id: "casino", label: "Live Casino", type: "custom", icon: Cassino },
  { id: "evolution", label: "Evolution", type: "custom", icon: Cassino },
  {
    id: "vitual",
    label: "Virtual Cassino",
    type: "custom",
    icon: VirtualCassino,
  },
  {
    id: "DragonTiger",
    label: "Dragon Tiger",
    type: "custom",
    icon: DragonTiger,
  },
];


export default function GamesOptions({ withHeader = false }) {
  const [active, setActive] = useState("see all");
  const naviagte = useNavigate();
  const { tabName } = useParams(); // works only on /game/:tabName
  const location = useLocation();
  // If on game page, highlight based on URL param
  // const activeTab = location.pathname.startsWith("/game") ? tabName : null;
  // 🔹 Sync "active" with URL param if available
  useEffect(() => {
    if (location.pathname.startsWith("/game") && tabName) {
      setActive(tabName);
    }
  }, [tabName, location.pathname]);

  const handleClick=(id)=>{
setActive(id)
// if(id=="see all"){
// naviagte("/")
// }
// else{
// naviagte(`/game/${id}`);
// }

  }
  // return (
  //   <div className="w-full overflow-x-auto hide-scrollbar px-0">
  //     <div className="flex gap-2 min-w-max">
  //       {categories.map((cat) => {
  //         const IconComp = cat.icon;
  //         return (
  //           <button
  //             key={cat.id}
  //             onClick={() => {
  //               handleClick(cat.id);
  //             }}
  //             className={`flex flex-col items-center justify-center py-1 rounded-[10px] border 
  //               transition-all duration-200
  //               ${
  //                 active === cat.id
  //                   ? "bg-[#969696] text-white border-[#969696]"
  //                   : "bg-[#969696] text-white border-gray-300"
  //               }`}
  //           >
  //             {/* ✅ Render icon only if exists */}
  //             {cat.icon && <IconComp active={active === cat.id} />}
  //             <span className="whitespace-nowrap text-center px-1">
  //               {cat.label}
  //             </span>
  //           </button>
  //         );
  //       })}
  //     </div>
  //   </div>
  // );

return (
  <div className="w-full overflow-x-auto hide-scrollbar px-0">
    <div className="flex gap-3 min-w-max">
      {categories.map((cat) => {
        const IconComp = cat.icon;
        return (
          <button
            key={cat.id}
            onClick={() => handleClick(cat.id)}
            className={`flex flex-col items-center justify-center
              w-[95px] h-[66px] px-2 py-1
              rounded-[10px] border text-white
              transition-all duration-200
              ${
                active === cat.id
                  ? "bg-[#969696] border-[#969696]"
                  : "bg-[#969696] border-gray-300"
              }`}
          >
            {/* ✅ Render icon only if exists */}
            {cat.icon && <IconComp active={active === cat.id} />}

            <span
              className="text-center leading-tight mt-1 text-[12px] font-medium truncate"
              title={cat.label} // tooltip on hover
            >
              {cat.label}
            </span>
          </button>
        );
      })}
    </div>
  </div>
);

}
